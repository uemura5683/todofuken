import Head from 'next/head'
import { createRoot } from 'react-dom/client';
import axios from "axios"
import styles from '../styles/Home.module.css'
import React from "react"
import Highcharts from 'highcharts';
import HighchartsReact from 'highcharts-react-official';

let value: Highcharts.SeriesOptionsType[] = [];
let years = [ '1965', '1970', '1975', '1980', '1985', '1990', '1995', '2000', '2005', '2010', '2015', '2020', '2025', '2030', '2035', '2040', '2045' ];

function Home(prefectures, option) {
  const obj = prefectures.prefectures.result;

　const oncChangeevent = (e) => {

  const HighchartsReacts = document.getElementById( 'HighchartsReact' );

    for (var li = 1; li <= 47; li++) {
      let inputelement = document.getElementById( 'input_' + li ) as HTMLInputElement
        , labelelement = document.getElementById( 'label_' + li );
      if( inputelement.checked === true ) {
        const url = 'https://opendata.resas-portal.go.jp/api/v1/population/composition/perYear?cityCode=-&prefCode=' + inputelement.value;
        axios.get(
          url, {
            headers: { 'X-API-KEY': process.env.API }
          }
        ).then(
          res => {
            let val:any = [];
            let results:any = res;
            let linedata = results.data.result.data[0].data;
            linedata.forEach(
              function(is_data:any) { 
                val.push ( is_data.value );
              }
            );
            value.push ( {
              type: "line",
              name: labelelement.innerText,
              data: val,
            } )
          }
        );
      }
    }

    const option: Highcharts.Options = {
      chart: { polar: true,　type: 'line' }, 
      title: { text: '総人口' },
      pane: { size: '100%' },
      xAxis: {
        title: {
          text: "年度",
        },
        categories: years,
      },
      yAxis: { title: { text: "人口数", }, },
      series: value.length === 0
                ? [{ type: "line", name: "都道府県名", data: [] }]
                : value,
    };
    const root = createRoot(HighchartsReacts);
    root.render(
      <HighchartsReact highcharts={Highcharts} options={option} />
    )
  }



  return (
    <div className={styles.container}>
      <Head>
        <title>都道府県一覧</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1 className={styles.title}>
          都道府県一覧
        </h1>
        <div id="Checkboxlist">
          {prefectures ? (
            <>
              <h3>都道府県</h3>
              <ul className={styles.ul}>
                {obj.map((prefecture, index) => {
                    return(
                      <li className={styles.li} key={index}>
                      <label htmlFor={`input_${prefecture.prefCode}`} className={styles.label} id={`label_${prefecture.prefCode}`}>
                        <input
                          id={`input_${prefecture.prefCode}`}
                          type="checkbox"
                          onChange={(e) => oncChangeevent(e.currentTarget)}
                          value={prefecture.prefCode}
                          name={prefecture.prefName}
                        />
                        {prefecture.prefName}
                      </label>
                    </li>
                    )
                  }
                )}
              </ul>
            </>
          ) : null }
        </div>
        <div id="HighchartsReact">
          <HighchartsReact highcharts={Highcharts} options={option} />
        </div>
      </main>
      <footer className={styles.footer}></footer>
    </div>
  )
}
export async function getStaticProps() {
  const key = {
    headers: {'X-API-KEY': process.env.API},
  };
  const prefectures = await fetch('https://opendata.resas-portal.go.jp/api/v1/prefectures', key)
        .then((res: { json: () => any }) => res.json())
        .catch(() => null);

  const option = {
    chart: { polar: true,　type: 'line' }, 
    title: { text: '総人口' },
    pane: { size: '100%' },
    xAxis: {
      title: {
        text: "年度",
      },
      categories: years,
    },
    yAxis: { title: { text: "人口数", }, },
    series: value
  };


  return {
    props: {
      prefectures: prefectures,
      option: option,
    },
  };
}
export default Home;